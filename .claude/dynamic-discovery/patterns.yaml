# Dynamic Tool Discovery Patterns
# Pattern-based activation system for MCP servers
# Reduces context window usage by 60-80%

version: "1.0.0"
description: "Pattern registry for intelligent MCP tool discovery"

# Activation Patterns
patterns:

  # Search and Research Patterns
  search_patterns:
    - pattern: "^(?:search|find|lookup|research)\\s+(?:for|about)\\s+.*$"
      tools:
        - name: "mcp__exa__exa_search"
          capability: "web_search"
          activation_cost: 150
          prerequisites: ["query_safety_check"]
          confidence_threshold: 0.8

    - pattern: "^(?:api|documentation|docs?)\\s+(?:for|of)\\s+.*$"
      tools:
        - name: "context7_api"
          capability: "documentation_lookup"
          activation_cost: 100
          prerequisites: ["api_access_check"]
          confidence_threshold: 0.9

  # Code Analysis Patterns
  code_patterns:
    - pattern: "^(?:(?:analyze|examine|review|inspect)\\s+(?:code|file|function)|(?:find|search|locate)\\s+(?:symbol|function|class|method))\\s+.*$"
      tools:
        - name: "mcp__serena__find_symbol"
          capability: "symbol_analysis"
          activation_cost: 120
          prerequisites: ["file_access_check"]
          confidence_threshold: 0.85

    - pattern: "^(?:(?:create|implement|add|write)\\s+(?:function|class|method|component)|(?:edit|modify|update)\\s+(?:file|code))\\s+.*$"
      tools:
        - name: "mcp__serena__insert_after_symbol"
          capability: "code_modification"
          activation_cost: 110
          prerequisites: ["file_access_check"]
          confidence_threshold: 0.75

  # Memory and Persistence Patterns
  memory_patterns:
    - pattern: "^(?:(?:store|save|remember|log)\\s+(?:information|data|context|decision)|(?:retrieve|get|fetch|load)\\s+(?:memory|context|data))\\s+.*$"
      tools:
        - name: "mcp__conport__log_decision"
          capability: "decision_logging"
          activation_cost: 80
          prerequisites: ["conport_access_check"]
          confidence_threshold: 0.9

    - pattern: "^(?:(?:openmemory|personal)\\s+(?:memory|context|preference)|(?:cross.session)\\s+(?:data|info))\\s+.*$"
      tools:
        - name: "mcp__openmemory__search_memories"
          capability: "personal_memory"
          activation_cost: 70
          prerequisites: ["openmemory_access_check"]
          confidence_threshold: 0.8

  # File and Directory Patterns
  file_patterns:
    - pattern: "^(?:(?:list|show|display)\\s+(?:files|directories|folder)|(?:file|directory)\\s+(?:structure|tree))\\s+.*$"
      tools:
        - name: "mcp__serena__list_dir"
          capability: "directory_listing"
          activation_cost: 60
          prerequisites: ["file_access_check"]
          confidence_threshold: 0.7

    - pattern: "^(?:(?:read|open|view)\\s+(?:file|document)|(?:show|display)\\s+(?:content|text))\\s+.*$"
      tools:
        - name: "mcp__serena__read_file"
          capability: "file_reading"
          activation_cost: 90
          prerequisites: ["file_access_check"]
          confidence_threshold: 0.8

  # Development Workflow Patterns
  workflow_patterns:
    - pattern: "^(?:(?:run|execute|test)\\s+(?:command|script|program)|(?:shell|terminal|bash)\\s+(?:command|operation))\\s+.*$"
      tools:
        - name: "mcp__cli__run_command"
          capability: "command_execution"
          activation_cost: 50
          prerequisites: ["cli_access_check"]
          confidence_threshold: 0.6

    - pattern: "^(?:(?:commit|push|pull|merge)\\s+(?:changes|code)|(?:git|version.control)\\s+(?:operation|action))\\s+.*$"
      tools:
        - name: "mcp__cli__run_command"
          capability: "git_operations"
          activation_cost: 55
          prerequisites: ["git_access_check"]
          confidence_threshold: 0.7

# Prerequisite Check Functions
prerequisites:
  query_safety_check:
    description: "Validates search queries for safety and appropriateness"
    implementation: "validate_search_query"
    timeout_seconds: 1

  api_access_check:
    description: "Verifies API access and authentication"
    implementation: "check_api_authentication"
    timeout_seconds: 2

  file_access_check:
    description: "Confirms file system access permissions"
    implementation: "verify_file_permissions"
    timeout_seconds: 1

  conport_access_check:
    description: "Validates ConPort service availability"
    implementation: "check_conport_connection"
    timeout_seconds: 3

  openmemory_access_check:
    description: "Checks OpenMemory service connectivity"
    implementation: "verify_openmemory_access"
    timeout_seconds: 2

  cli_access_check:
    description: "Validates CLI command execution permissions"
    implementation: "check_cli_permissions"
    timeout_seconds: 1

  git_access_check:
    description: "Confirms git repository access"
    implementation: "verify_git_repository"
    timeout_seconds: 1

# Context Budget Allocation
budget_allocation:
  base_allocation:
    search_tools: 150
    code_tools: 120
    memory_tools: 80
    file_tools: 60
    workflow_tools: 50

  dynamic_scaling:
    high_frequency_bonus: 20    # Bonus for frequently used tools
    low_usage_penalty: -10      # Penalty for rarely used tools
    pattern_confidence_multiplier: 1.5  # Multiplier for high-confidence patterns

# Performance Tuning
performance_tuning:
  pattern_cache_size: 100
  cache_ttl_seconds: 3600
  max_parallel_activations: 3
  activation_timeout_seconds: 10
  health_check_interval_seconds: 30

# Safety Constraints
safety_constraints:
  max_tools_per_activation: 5
  max_activation_attempts: 3
  minimum_confidence_threshold: 0.6
  blocked_patterns: []  # Add any patterns that should never trigger activation
  require_explicit_consent: false  # Whether to ask for user confirmation

# Monitoring and Analytics
monitoring:
  track_pattern_usage: true
  log_activation_failures: true
  record_context_usage: true
  generate_performance_reports: true
  report_interval_days: 7

# Fallback Mechanisms
fallbacks:
  primary_failure_fallback: "core_tools_only"
  budget_exceeded_fallback: "essential_tools_only"
  health_check_failure_fallback: "cached_tools_only"
  timeout_fallback: "async_activation"

# Integration Points
integrations:
  sequential_thinking:
    enabled: true
    analysis_patterns: ["complex_activations", "pattern_conflicts"]
    confidence_threshold: 0.7

  conport:
    enabled: true
    store_patterns: true
    track_activations: true
    learn_preferences: true

  openmemory:
    enabled: true
    remember_patterns: true
    learn_user_preferences: true
    cross_session_learning: true